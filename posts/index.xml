<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Keehun Nam</title>
    <link>https://www.keehun.dev/posts/</link>
    <description>Recent content in Posts on Keehun Nam</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Feb 2019 20:00:00 -0600</lastBuildDate>
    
	<atom:link href="https://www.keehun.dev/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Practical Dynamic Type Part 3: Attributed Strings</title>
      <link>https://www.keehun.dev/practical-dynamic-type-part-3-attributed-strings/</link>
      <pubDate>Fri, 15 Feb 2019 20:00:00 -0600</pubDate>
      
      <guid>https://www.keehun.dev/practical-dynamic-type-part-3-attributed-strings/</guid>
      <description>&lt;p&gt;Ensuring that applications remain accessible for all is one of our highest priorities at &lt;a href=&#34;https://livefront.com&#34;&gt;Livefront&lt;/a&gt;, and we believe that a key component in achieving that goal is to flawlessly support Dynamic Type in all of our applications. &lt;a href=&#34;https://medium.com/livefront/practical-dynamic-type-d2b5774e8a8a&#34;&gt;Part 1&lt;/a&gt; of our &lt;em&gt;Practical Dynamic Type&lt;/em&gt; series focused on supporting iOS 10 and &lt;a href=&#34;https://medium.com/livefront/practical-dynamic-type-part-2-testing-613bb845f26b&#34;&gt;Part 2&lt;/a&gt; focused on unit testing. This third installment will focus on Attributed Strings.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Understanding Swift&#39;s Characterset</title>
      <link>https://www.keehun.dev/understanding-swifts-characterset/</link>
      <pubDate>Wed, 30 Jan 2019 19:29:33 -0600</pubDate>
      
      <guid>https://www.keehun.dev/understanding-swifts-characterset/</guid>
      <description>&lt;p&gt;Have you ever needed to check if a string was made up only of digits? How about the presence of punctuation or non-alphanumeric characters? One could use a variety of methods from one of the &lt;code&gt;Formatter&lt;/code&gt; classes to &lt;code&gt;NSScanner&lt;/code&gt; to even &lt;code&gt;NSPredicate&lt;/code&gt;, but the &lt;a href=&#34;https://stackoverflow.com/questions/34354740/how-do-you-confirm-a-string-only-contains-numbers-in-swift/34354943&#34;&gt;most&lt;/a&gt; &lt;a href=&#34;https://stackoverflow.com/questions/34587094/how-to-check-if-text-contains-only-numbers/34587234&#34;&gt;likely&lt;/a&gt; &lt;a href=&#34;https://www.reddit.com/r/swift/comments/40jj5r/is_there_a_way_to_find_whether_or_not_a_character/cyun9yn/&#34;&gt;snippet&lt;/a&gt; you would&amp;rsquo;ve found involved the use of an inverted &lt;code&gt;CharacterSet&lt;/code&gt;.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Practical Dynamic Type: Part 2, Testing</title>
      <link>https://www.keehun.dev/practical-dynamic-type-part-2-testing/</link>
      <pubDate>Mon, 27 Aug 2018 20:00:00 -0600</pubDate>
      
      <guid>https://www.keehun.dev/practical-dynamic-type-part-2-testing/</guid>
      <description>&lt;p&gt;Last year, &lt;a href=&#34;https://livefront.com&#34;&gt;Livefront&lt;/a&gt;&amp;rsquo;s software developer &lt;a href=&#34;https://medium.com/@chris_91497&#34;&gt;Chris Sessions&lt;/a&gt; wrote a &lt;a href=&#34;https://medium.com/livefront/practical-dynamic-type-d2b5774e8a8a&#34;&gt;helpful article&lt;/a&gt; about practical usage of Dynamic Type. This short follow-up addresses one primary concern: &lt;em&gt;Unit Testing&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>